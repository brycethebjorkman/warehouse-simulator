#!/bin/bash
#
# run the simulation

set -e

# set up directories and constants
app_dir="/usr/app"
src_dir="$app_dir/src/warehouse"
results_dir="$app_dir/results"
mkdir -p "$results_dir"
lf_bin_dir="$app_dir/bin"
mkdir -p "$lf_bin_dir"
network_simulation="star_tree"
rti_ip="192.168.2.1"
federation_name="Warehouse"
federation_run_dir="$app_dir/fed-run/$federation_name"
mkdir -p "$federation_run_dir"
federation_out_dir="$results_dir/$federation_name"
rti_log="$federation_out_dir/${federation_name}_RTI.log"
mkdir -p "$federation_out_dir"
federation_id=`openssl rand -hex 24`

# build the Lingua Franca project if necessary
if [ ! -e "$lf_bin_dir/$federation_name" ]; then
    echo "Building Warehouse before running simulation"
    bash build-warehouse
fi

# get federate names and ip addresses from the main source file
federate_definitions=$(awk '/= new .* at .*;/ { gsub(";", ""); print $1, $NF }' "$src_dir/$federation_name.lf")
readarray -t federates <<< $federate_definitions
num_federates=${#federates[@]}

# set up federate info and directories
declare -A federates_name
declare -A federates_ip
declare -A federates_dir
declare -A federates_path
for ((i = 0; i < "$num_federates"; i++)); do
    # get federate name and ip
    federate="${federates[$i]}"
    federate_name=$(echo "$federate" | awk '{ print $1 }')
    federates_name[$i]="$federate_name"
    federate_ip=$(echo "$federate" | awk '{ print $2 }')
    federates_ip[$i]="$federate_ip"
    # set up directory federate will run in
    federate_run_dir="$federation_run_dir/$federate_name"
    mkdir -p "$federate_run_dir"
    federate_run="$federate_run_dir/${federation_name}_federate__$federate_name"
    federates_run[$i]="$federate_run"
    # set up directory federate will output to
    federate_out_dir="$federation_out_dir/$federate_name"
    mkdir -p "$federate_out_dir"
    federates_log[$i]="$federate_out_dir/$federate_name.log"
    # add content to federate run directory
    cp "$app_dir/fed-gen/$federation_name/bin/federate__$federate_name" "$federate_run"
    ln -s "$federate_out_dir" "$federate_run_dir/out"
    echo "Set up federate $i name ${federates_name[$i]} ip ${federates_ip[$i]}"
done

# start network simulation
echo "Starting $network_simulation network simulation"
bash run -p "$network_simulation" &> "$results_dir/network_simulation.log" &
while ! ip a | grep -q "tap_l.*state UP";
do
    sleep 1
done

# start federation
echo "Starting $federation_name"

ssh "$rti_ip" '\
    echo "-------------- Federation ID: "'$federation_id' >> '$rti_log'; \
    date >> '$rti_log'; \
    stdbuf -i 0 -o 0 -e 0 \
    RTI -i '$federation_id' -n '$num_federates' -c init exchanges-per-interval 10 \
    2>&1 | tee -a '$rti_log'' &

start_federate(){
    index=$1
    name="${federates_name[$index]}"
    ip="${federates_ip[$index]}"
    log="${federates_log[$index]}"
    run="${federates_run[$index]}"

    echo "Starting federate $name at $ip with log $log"

    ssh "$ip" '\
        echo "-------------- Federation ID: "'$federation_id' >> '$log'; \
        date >> '$log'; \
        stdbuf -i 0 -o 0 -e 0 \
        '$run' -i '$federation_id' \
        2>&1 | tee -a '$log'' &
}

for ((i = 0; i < "$num_federates"; i++)); do
    start_federate $i
done
